EXTERN DRAW_BACKBOARD:FAR

DATA SEGMENT
	HORIZONTAL_DIRECTION DW 0
	VERTICAL_DIRECTION DW 1
	MOV_LENGTH1 DW 200
	MOV_LENGTH2 DW 0

	MOVING_DIRECTION DW ?

	X_COORDINATE1 DW 10
	Y_COORDINATE1 DW 10
	X_COORDINATE2 DW 100
	Y_COORDINATE2 DW 10
	X_COORDINATE3 DW 10
	Y_COORDINATE3 DW 80
	X_COORDINATE4 DW 100
	Y_COORDINATE4 DW 80
DATA ENDS
STACK SEGMENT
STACK ENDS
CODE SEGMENT
DISPLAYMODULE PROC FAR
	ASSUME DS:DATA, SS:STACK, CS:CODE
	
PUSH_COORDINATE	MACRO  X,Y,TAR,DIRECTION
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	
	SUB AX,AX
	SUB BX,BX
	SUB CX,CX
	SUB DX,DX
	
	MOV SI,OFFSET DIRECTION
	MOV AX,[SI]
	MOV SI,OFFSET X
	MOV BX,[SI]
	MOV SI,OFFSET Y
	MOV CX,[SI]
	MOV SI,OFFSET TAR
	MOV DX,[SI]
	
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	CALL DRAW_BACKBOARD
	
	POP SI
	POP DX
	POP CX
	POP BX
	POP AX
ENDM

CLEAR_SCREEN MACRO 
	PUSH AX
	MOV AX,0600H
	MOV BH,07
	MOV CX,0000
	MOV DX,184FH
	INT 10H
	POP AX
ENDM

MOVE_BACKBOARD_RIGHT MACRO
	PUSH AX
	PUSH SI
	
	MOV SI,OFFSET X_COORDINATE1
	MOV AX,[SI]
	INC AX
	MOV [SI],AX
	MOV SI,OFFSET X_COORDINATE2
	MOV AX,[SI]
	INC AX
	MOV [SI],AX
	MOV SI,OFFSET X_COORDINATE3
	MOV AX,[SI]
	INC AX
	MOV [SI],AX
	MOV SI,OFFSET X_COORDINATE4
	MOV AX,[SI]
	INC AX
	MOV [SI],AX
	
	POP SI
	POP AX
ENDM

MOVE_BACKBOARD_LEFT MACRO
	PUSH AX
	PUSH SI
	
	MOV SI,OFFSET X_COORDINATE1
	MOV AX,[SI]
	DEC AX
	MOV [SI],AX
	MOV SI,OFFSET X_COORDINATE2
	MOV AX,[SI]
	DEC AX
	MOV [SI],AX
	MOV SI,OFFSET X_COORDINATE3
	MOV AX,[SI]
	DEC AX
	MOV [SI],AX
	MOV SI,OFFSET X_COORDINATE4
	MOV AX,[SI]
	DEC AX
	MOV [SI],AX
	
	POP SI
	POP AX
ENDM











	
	
	


	PUSH AX
	PUSH DS
	
	MOV AX,DATA
	MOV DS,AX

	;Clear the screen
	CLEAR_SCREEN
	
	;Change the video mode
	MOV AH,00
	MOV AL,04
	INT 10H
	
DOO:	
	PUSH SI
	PUSH AX
	
	MOV SI,OFFSET Y_COORDINATE3
	MOV AX,[SI]
	MOV SI,OFFSET Y_COORDINATE1
	PUSH AX
	MOV AX,10
	MOV [SI],AX
	POP AX
	
	PUSH AX
	PUSH SI
	PUSH DI
	MOV SI,OFFSET MOVING_DIRECTION
	MOV AX,[SI]
	CMP AX,0
	JNZ LEFT


RIGHT:	
	MOVE_BACKBOARD_RIGHT
	JMP POPOUT
	
LEFT:
	MOVE_BACKBOARD_LEFT
	
POPOUT:
	POP DI
	POP SI
	POP AX
	
DRAW:
	PUSH_COORDINATE X_COORDINATE1,Y_COORDINATE1,X_COORDINATE2,HORIZONTAL_DIRECTION
		
	PUSH_COORDINATE X_COORDINATE1,Y_COORDINATE1,Y_COORDINATE3,VERTICAL_DIRECTION
	PUSH_COORDINATE X_COORDINATE2,Y_COORDINATE2,Y_COORDINATE4,VERTICAL_DIRECTION
	
	PUSH AX
	;SI contains Y_COORDINATE3
	MOV AX,[SI]
	INC AX
	MOV [SI],AX
	POP AX
	CMP AX,[SI]
	JNZ DRAW
	
	POP AX
	POP SI
	
	PUSH SI
	PUSH AX
	MOV SI,OFFSET MOVING_DIRECTION
	;0 for moving right.
	MOV AX,0
	CMP [SI],AX
	JNZ MOVING_LEFT
	

MOVING_RIGHT:	
	PUSH AX
	PUSH SI
	PUSH DI
	MOV SI,OFFSET MOV_LENGTH1
	MOV AX,[SI]
	DEC AX
	PUSH AX
	MOV DI,OFFSET MOV_LENGTH2
	MOV AX,[DI]
	INC AX
	MOV [DI],AX
	POP AX
	MOV [SI],AX
	INC AX
	DEC AX
	JNZ DOO
	POP DI
	POP SI
	POP AX
	
	POP AX
	POP SI
	JMP NEXT

MOVING_LEFT:	
	PUSH AX
	PUSH SI
	PUSH DI
	MOV SI,OFFSET MOV_LENGTH2
	MOV AX,[SI]
	DEC AX
	PUSH AX
	MOV DI,OFFSET MOV_LENGTH1
	MOV AX,[DI]
	INC AX
	MOV [DI],AX
	POP AX
	MOV [SI],AX
	INC AX
	DEC AX
	JNZ DOO
	POP DI
	POP SI
	POP AX
	POP AX
	POP SI

NEXT:
	PUSH AX
	PUSH SI
	MOV SI,OFFSET MOVING_DIRECTION
	MOV AX,[SI]
	CMP AX,0
	JNZ RIGHT_NEXT
	MOV AX,1
	MOV [SI],AX
	JMP NEXT2
RIGHT_NEXT:
	MOV AX,0
	MOV [SI],AX
	
NEXT2:
	POP DI
	POP SI
	POP AX
		
	jmp DOO

	POP DS
	POP AX
DISPLAYMODULE ENDP
CODE ENDS
END